{
    "contents" : "createEpsilonConstraint <- function(eb){\n  lhs <- matrix(c(1))\n  rownames(lhs) <- c(\"EC\")\n  colnames(lhs) <- c(\"e\")\n  dir <- matrix(c(\">=\"))\n  rownames(dir) <- c(\"EC\")\n  rhs <- matrix(MINEPS)\n  rownames(rhs) <- c(\"EC\")\n  eb$constr <- list(lhs=lhs, dir=dir, rhs=rhs)\n  eb$epsylonIndex <- 1\n  return(eb)\n}\n\ncreateB1Constraint <- function(etrib, J) {\n  weigthConst <- matrix(0, ncol=ncol(etrib$constr$lhs), nrow=1, dimnames=list(\"B1\",colnames(etrib$constr$lhs)))\n    \n  weigths <- paste0(\"w\",J)\n  weigthConst[, weigths] <- 1\n  etrib$constr$lhs <- rbind(etrib$constr$lhs, weigthConst)\n  \n  etrib$constr$rhs <- rbind(etrib$constr$rhs, matrix(1, ncol=1, nrow=1, dimnames=list(\"B1\")))\n  etrib$constr$dir <- rbind(etrib$constr$dir, matrix(\"==\", ncol=1, nrow=1, dimnames=list(\"B1\")))\n  \n  return(etrib)\n}\n\ncreateB2Constraint <- function(etrib, J, H) {\n  p <- length(H)\n  for(j in J){\n    wName <- paste0(\"w\", j)\n    lhs <- matrix(0, nrow=1, ncol=ncol(etrib$constr$lhs), dimnames=list(paste0(\"B2.\",j), colnames(etrib$constr$lhs)))\n    lhs[,wName] <- 1\n    etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n    \n    etrib$constr$rhs <- rbind(etrib$constr$rhs, matrix(1/p, ncol=1, nrow=1, dimnames=list(paste0(\"B2.\",j))))\n    etrib$constr$dir <- rbind(etrib$constr$dir, matrix(\"==\", ncol=1, nrow=1, dimnames=list(paste0(\"B2.\",j))))\n  }\n  \n  return(etrib)\n}\n\ncreateB4Constraint <- function(etrib){\n  lhs <- matrix(0, nrow=1, ncol=ncol(etrib$constr$lhs), dimnames=list(\"B4.1\", colnames(etrib$constr$lhs)))\n  lhs[,\"L\"] <- 1\n  etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n  etrib$constr$rhs <- rbind(etrib$constr$rhs, matrix(1, ncol=1, nrow=1, dimnames=list(\"B4.1\")))\n  etrib$constr$dir <- rbind(etrib$constr$dir, matrix(\"<=\", ncol=1, nrow=1, dimnames=list(\"B4.1\")))\n  \n  lhs <- matrix(0, nrow=1, ncol=ncol(etrib$constr$lhs), dimnames=list(\"B4.2\", colnames(etrib$constr$lhs)))\n  lhs[,\"L\"] <- 1\n  etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n  etrib$constr$rhs <- rbind(etrib$constr$rhs, matrix(0.5, ncol=1, nrow=1, dimnames=list(\"B4.2\")))\n  etrib$constr$dir <- rbind(etrib$constr$dir, matrix(\">=\", ncol=1, nrow=1, dimnames=list(\"B4.2\")))\n  return(etrib)\n}\n\ncreateB5Constraint <- function(etrib, J){\n  names <- paste0(\"w\",J)\n  m <- length(names)\n  lhs <- matrix(0, nrow = m*2, ncol=ncol(etrib$constr$lhs),\n                dimnames = list(paste0(\"B5.\",1:(m*2)), colnames(etrib$constr$lhs)))\n                \n  dir <- matrix(rep.int(c(\">=\",\"<=\"),times=m), nrow = m*2, ncol = 1, dimnames = list(paste0(\"B5.\",1:(m*2))))\n  \n  rhs <- matrix(rep.int(c(0, 1),times=m), nrow = m*2, ncol = 1, dimnames = list(paste0(\"B5.\",1:(m*2))))\n \n  row <- 0\n  for(name in names){\n    row <- row + 1\n    lhs[row,name] <- 1\n  \n    row <- row + 1\n    lhs[row,name] <- 1\n      \n  }\n  \n  etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n  etrib$constr$rhs <- rbind(etrib$constr$rhs, rhs)\n  etrib$constr$dir <- rbind(etrib$constr$dir, dir)\n  \n  return(etrib)\n}\n\ncreateB6Constraint <- function(etrib, performances, profiles,monotonicity, th){\n  a <- nrow(performances)\n  b <- nrow(profiles)-1\n  m <- ncol(performances)\n  \n  nrows <- m*(b+1)*a*2\n\n  rownames <- paste0(\"B6.\", seq(1:nrows))\n  lhs <- matrix(0, ncol=ncol(etrib$constr$lhs), nrow=nrows, dimnames=list(rownames, colnames(etrib$constr$lhs)))\n\n  row <- 0\n  for (j in 1:m) {\n    for (aInd in 1 : a) {\n      for (bInd in 0 : b) {\n        row = row + 1        \n        indAB <- paste0('c', j, '(a', aInd, ',b', bInd, ')')\n        lhs[row,indAB] = 1\n        val = outranking(performances[aInd,j], profiles[bInd+1,j],\n                         th[j,2], th[j,1], th[j, 4], th[j, 3], monotonicity[j])\n        lhs[row,paste0(\"w\",j)] = -1 * val\n      }\n    }\n  }\n  \n  for (j in 1:m) {\n    for (bInd in 0:b) {\n      for (aInd in 1:a) {\n        row = row + 1        \n        indBA <- paste0('c', j, '(b', bInd, ',a', aInd, ')')  \n        lhs[row,indBA] = 1\n        val <-  outranking(profiles[bInd+1,j], performances[aInd,j],\n                               th[j,2], th[j,1], th[j, 4], th[j, 3], monotonicity[j])\n        lhs[row,paste0(\"w\",j)] = -1 * val\n      }\n    }\n  }\n  \n  etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n  \n  message(nrow(lhs))\n  message(length(rownames))\n  message(row)\n  \n  dir <- matrix(\"==\", nrow=row, ncol=1)\n  rownames(dir) <- rownames\n  etrib$constr$dir <- rbind(etrib$constr$dir, dir)\n  rhs <- matrix(0, nrow=nrows, ncol=1)\n  rownames(rhs) <- rownames\n  etrib$constr$rhs <- rbind(etrib$constr$rhs, rhs)\n  \n  return(etrib)\n}\n\noutranking <- function(x, y, qb, qa, pb, pa, ascending){\n  px <- pa * x + pb\n  py <- pa * y + pb\n  qx <- qa * x + qb\n  qy <- qa * y + qb\n  diff <- y - x\n  if(ascending == FALSE){\n    diff <- 0 - diff\n  }\n  if(diff >= px){\n    return(0)\n  }else if(diff <= qx){\n    return(1)\n  }else \n    return((px - diff)/(px - qx))\n}\n\n",
    "created" : 1400802832894.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2798641403",
    "id" : "DC92F206",
    "lastKnownWriteTime" : 1406479478,
    "path" : "C:/Users/Patryk/Desktop/Praca Magisterska/ELECTRE TRI B/etrib/etribbase.R",
    "project_path" : "etribbase.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}