{
    "contents" : "createBorderProfiles <- function(prof, assig){\n  ##TODO\n  return(prof)\n}\n\ncombineConstraintsMatrix <- function(...) {\n  allConst = list(...)\n  \n  lhs <- c()\n  dir <- c()\n  rhs <- c()\n  \n  for (const in allConst) {\n    lhs <- rbind(lhs, const$lhs)\n    dir <- rbind(dir, const$dir)\n    rhs <- rbind(rhs, const$rhs)\n  }\n  \n  return(list(lhs=lhs, dir=dir, rhs=rhs))\n}\n\ngetColNames <- function(nAlts, nCrit, nAssignments, nCats) {\n  res <- paste('w', 1:nCrit, sep='')\n  \n  for (j in 1:nCrit) {\n    for (a in 1:nAlts) {\n      for (b in 1:nCats) {\n        res = c(res, paste('c', j, '(a', a, ',b', b, ')', sep=''))\n      }\n    }\n  }\n  \n  for (j in 1:nCrit) {\n    for (b in 1:nCats) {    \n      for (a in 1:nAlts) {\n        res = c(res, paste('c', j, '(b', b, ',a', a, ')', sep=''))\n      }\n    }\n  }\n  \n  for (j in 1:nCrit) {\n    for (b in 1:(nCats-1)) {\n      res = c(res, paste('c', j, '(b', b, ',b', (b+1), ')', sep=''))\n    }\n  }\n  \n  res = c(res, 'lam')\n  res = c(res, 'e')\n  \n  for (a in 1:nAssignments) {\n    res = c(res, paste(\"ass\", a, \"L\", sep=''), paste(\"ass\", a, \"R\", sep=''))\n  }\n  \n  posInds <- c(\"1\", \"2\", \"3\", \"41\", \"42\", \"43\")\n  for (i in posInds) {\n    res = c(res, paste(\"pos\", i, \"L\", sep=''), paste(\"pos\", i, \"R\", sep=''))\n  }\n  \n  res = c(res, \"necL\", \"necR\")\n  \n  return(res)\n}\n\ngetNrBaseVars <- function(nAlts, nCrit, nAssignments, nCats) {\n  return(getEpsilonIndex(nAlts=nAlts, nCrit=nCrit, nCats=nCats)\n         + 2 * nAssignments + 12 + 2)\n}\n\ngetEpsilonIndex <- function(nAlts, nCrit, nCats) {\n  return (getLambdaIndex(nAlts, nCrit, nCats) + 1)\n}\n\ngetLambdaIndex <- function(nAlts, nCrit, nCats) {\n  return (nCrit + nCrit * nAlts * nCats * 2 + nCrit * (nCats-1) + 1)\n}\n\ngetWjIndex <- function(j) {\n  return (j)\n}\n\ngetCjBhBh1Index <- function (nCrit, nAlts, nCats, j, h) {\n  stopifnot(h > 0 && h < nCats)\n  stopifnot(j > 0 && j <= nCrit)\n  \n  offset <- nCrit +  (nCrit * nAlts * nCats * 2)\n  tMinus1 <- nCats - 1\n  return(offset + (j-1) * tMinus1 + h)\n}\n\n## order is j1a1b1, j1a1b2, j2a1b1, ...\ngetCjABIndex <- function(j, aInd, bInd, nAlts, nCats, nCrit) {\n  stopifnot(bInd <= nCats && bInd > 0)\n  stopifnot(aInd <= nAlts && aInd > 0)\n  stopifnot(j <= nCrit && j > 0)\n  \n  offset <- nCrit\n  index <- (j - 1) * nCats * nAlts + (aInd - 1) * nCats + bInd\n  return (offset + index)\n}\n\n## p is preference threshold\n## q is indifference threshold\noutranking <- function(x, y, q, qMult, p, pMult, ascending) {\n  stopifnot(p >= 0 && q >= 0 && p >= q)\n  diff <- y - x\n  if (ascending == FALSE) {\n    diff = 0 - diff\n  }\n  \n  indif <- q + qMult * x\n  pref <- p + pMult * x\n  \n  if (diff <= indif) {\n    return (1)\n  } else if (diff >= pref) {\n    return(0)\n  } else {\n    return ((pref-diff) / (pref - indif))\n  }\n}\n\ngetCjBAIndex <- function(j, aInd, bInd, nAlts, nCats, nCrit) {\n  stopifnot(bInd <= nCats && bInd > 0)\n  stopifnot(aInd <= nAlts && aInd > 0)\n  stopifnot(j <= nCrit && j > 0)\n  \n  offset <- nCrit + (nCrit * nAlts * nCats)\n  return (offset + (j - 1) * nCats * nAlts + (bInd - 1) * nAlts + aInd)\n}",
    "created" : 1400726042607.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2078149196",
    "id" : "99DF53CD",
    "lastKnownWriteTime" : 1400726062,
    "path" : "C:/Users/Patryk/Desktop/Praca Magisterska/ELECTRE TRI B/etrib/etributils.R",
    "project_path" : "etributils.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}