{
    "contents" : "M <- 1E+10\nMINEPS <- 1E-10\n\nsource('etriutils.R')\nsource('etributils.R')\nsource('etribbase.R')\n\n\netrib.init <- function(performances, profiles, assignments,monotonicity, th, cardinalities) {\n  stopifnot(ncol(performances) == ncol(profiles))\n  stopifnot(ncol(assignments) == 3)\n  stopifnot(nrow(assignments) < nrow(performances))\n  stopifnot(nrow(th) == ncol(performances))\n  stopifnot(nrow(th) == length(monotonicity))\n  profiles <- createBorderProfiles(profiles, assignments)\n  \n  message(\"--- constructing base model\")\n  \n  \n  A <- 1:nrow(performances)\n  H <- 1:nrow(profiles)\n  J <- 1:ncol(performances)\n  \n  etrib <- list()\n  \n  varnames <- createTRIBVariables(A, H, J)\n  etrib$constr$lhs <- intiMatrix(varnames)\n  etrib$constr$dir <- initDIRMatrix()\n  etrib$constr$rhs <- intiRHSMatrix()\n  \n  etrib <- buildBaseModel(etrib, performances, profiles, assignments,monotonicity, th)\n  etrib <- buildAEModel(etrib,  J, assignments)\n  \n  return(etrib)\n}\n\n\nbuildBaseModel <- function(etrib, performances, profiles, assignments,monotonicity, th) {\n  nAlts <- nrow(performances)\n  nCrit <- ncol(performances)\n  nAssignments <- nrow(assignments)\n  nCats <- nrow(profiles)\n  \n  A <- 1:nrow(performances)\n  H <- 1:nrow(profiles)\n  J <- 1:ncol(performances)\n  \n  etrib <- createB1Constraint(etrib, J)\n  etrib <- createB2Constraint(etrib, J, H)\n  etrib <- createB4Constraint(etrib)\n  etrib <- createB5Constraint(etrib, J)\n  etrib <- createB6Constraint(etrib, performances, profiles,monotonicity, th)\n  \n  return(etrib)\n}\n\nbuildAEModel <- function(etrib, J, assignments){\n  nAs <- nrow(assignments)\n  nrows <- nAs * 2\n  rnames <- paste0(\"AE.\",1:nrows)\n  lhs <- matrix(0, nrow=nrows, ncol=ncol(etrib$constr$lhs), dimnames=list(rnames,colnames(etrib$constr$lhs)))\n  \n  row <- 0\n  for(i in 1:nAs){\n    a <- assignments[i,]\n    row <- row + 1\n    lhs[row,paste0(\"c\",J,\"(a\",a[1],\",b\",a[2],\")\")] <- 1\n    lhs[row,\"L\"] <- -1\n  }\n  \n  for(i in 1:nAs){\n    a <- assignments[i,]\n    row <- row + 1\n    lhs[row,paste0(\"c\",J,\"(a\",a[1],\",b\",a[3],\")\")] <- 1\n    lhs[row,\"L\"] <- -1\n    lhs[row,\"e\"] <- 1\n  }\n  \n  etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n  \n  dir <- as.matrix(rep(c(\">=\",\"<=\"), nAs))\n  rownames(dir) <- rnames\n  etrib$constr$dir <- rbind(etrib$constr$dir, dir)\n  rhs <- as.matrix(rep(0, row))\n  rownames(rhs) <- rnames\n  etrib$constr$rhs <- rbind(etrib$constr$rhs, rhs)\n  \n  return(etrib)\n}\n\ncreateTRIBVariables <- function(A, H, J){\n  varnames <- c()\n  \n  p <- length(H)\n  \n  varnames <- paste0(\"w\",J)\n  varnames <- c(varnames, c(\"L\"))\n  varnames <- c(varnames, c(\"e\"))\n  varnames = c(varnames, paste0(\"c\", J, \"(b\", p, \",b0)\"))\n\n  for(a in A){\n    for(h in H){\n      varnames <- c(varnames, paste0(\"v(a\",a,\",h\",h,\")\"))\n    }\n  }\n  \n  for (a in A) {\n    for (b in H) {\n      varnames = c(varnames, paste0('c', J, '(a', a, ',b', b, ')'))\n    }\n  }\n  \n  for (b in H) {    \n    for (a in A) {\n      varnames = c(varnames, paste0('c', J, '(b', b, ',a', a, ')'))\n    }\n  }\n  \n  return(varnames)\n}\n\nintiMatrix <- function(names){\n  lhs <- matrix(0, ncol=length(names), nrow=1,dimnames=list(\"E\",names))\n  lhs[\"E\",\"e\"] <- 1\n  return(lhs)\n}\n\ninitDIRMatrix <- function(){\n  dir <- matrix(c(\">=\"))\n  rownames(dir) <- c(\"E\")\n  return(dir)\n}\n\nintiRHSMatrix <- function(){\n  rhs <- matrix(MINEPS)\n  rownames(rhs) <- \"E\"\n  return(rhs)\n}\n\n",
    "created" : 1400978849095.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1872828190",
    "id" : "CAE48DB8",
    "lastKnownWriteTime" : 1401193568,
    "path" : "C:/Users/Patryk/Desktop/Praca Magisterska/ELECTRE TRI B/etrib/etrib.R",
    "project_path" : "etrib.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}