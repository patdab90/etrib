{
    "contents" : "createPC1Constrints <- function(etrib, J, H, pCk){## TODO sprawdzić poprawność dla k=0 !!!!\n  nrows <- length(H)*nrow(pCk)\n  rnames <- paste0(\"PC1.\",1:nrows)\n  p <- length(H)\n  \n  row <- 0\n  for(row in nrow(pCk)){\n    pc <- pCk[row,]\n    for(h in 1:(p-pc[3])){\n      row <- row + 1\n      lhs <- matrix(0, nrow=1, ncol=ncol(etrib$constr$lhs), dimnames=list(paste0(\"PC1.\", row), colnames(etrib$constr$lhs)))\n      dir <- matrix(\">=\", nrow=1, ncol=1, dimnames=list(paste0(\"PC1.\", row)))\n      rhs <- matrix(-M, nrow=1, ncol=1, dimnames=list(paste0(\"PC1.\", row)))\n      \n      canames <- paste0(\"c\",J,\"(a\",pc[1],\",b\",(h-1+pc[3]),\")\")\n      lhs[,canames] <- 1\n      lhs[,\"L\"] <- -1\n      lhs[, paste0(\"v(a\",pc[1],\",b\",pc[2],\",>=\",pc[3],\",h\",h,\")\")] <- -M\n      \n      etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n      etrib$constr$dir <- rbind(etrib$constr$dir, dir)\n      etrib$constr$rhs <- rbind(etrib$constr$rhs, rhs)\n    }\n  }\n  return(etrib)\n}\n\ncreatePC2Constrints <- function(etrib,J, H, pCk){\n  nrows <- length(H)*nrow(pCk)\n  rnames <- paste0(\"PC1.\",1:nrows)\n  p <- length(H)\n  \n  row <- 0\n  for(row in nrow(pCk)){\n    pc <- pCk[row,]\n    for(h in 1:(p-pc[3])){\n      row <- row + 1\n      lhs <- matrix(0, nrow=1, ncol=ncol(etrib$constr$lhs),\n                    dimnames=list(paste0(\"PC2.\", row), colnames(etrib$constr$lhs)))\n      dir <- matrix(\"<=\", nrow=1, ncol=1, dimnames=list(paste0(\"PC2.\", row)))\n      rhs <- matrix(M, nrow=1, ncol=1, dimnames=list(paste0(\"PC2.\", row)))\n      \n      canames <- paste0(\"c\",J,\"(a\",pc[1],\",b\",h,\")\")\n      lhs[,canames] <- 1\n      lhs[,\"L\"] <- -1\n      lhs[,\"e\"] <- 1\n      lhs[, paste0(\"v(a\",pc[1],\",b\",pc[2],\",>=\",pc[3],\",h\",h,\")\")] <- M\n      \n      etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n      etrib$constr$dir <- rbind(etrib$constr$dir, dir)\n      etrib$constr$rhs <- rbind(etrib$constr$rhs, rhs)\n    }\n  }\n  return(etrib)\n}\n\ncreatePC3Constrints <- function(etrib, J, H, pCk){\n  p <- length(H)\n  lhs <- matrix(0, nrow=nrow(pCk), ncol=ncol(etrib$constr$lhs), \n                dimnames=list(paste0(\"PC2.\", 1:nrow(pCk)), colnames(etrib$constr$lhs)))\n  dir <- matrix(\">=\", nrow=nrow(pCk), ncol=1, \n                dimnames=list(paste0(\"PC2.\", 1:nrow(pCk))))\n  rhs <- matrix(1, nrow=nrow(pCk), ncol=1, \n                dimnames=list(paste0(\"PC2.\", 1:nrow(pCk))))\n  \n  for(row in nrow(pCk)){\n    pc <- pCk[row,]    \n    lhs[row, paste0(\"v(a\",pc[1],\",b\",pc[2],\",>=\",pc[3],\",h\",1:(p-pc[3]),\")\")] <- 1        \n  }\n  \n  etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n  etrib$constr$dir <- rbind(etrib$constr$dir, dir)\n  etrib$constr$rhs <- rbind(etrib$constr$rhs, rhs)\n  return(etrib)\n}\n\n\n\n\n\n\n\n\ncreatePU1Constrints <- function(etrib, J, H, pCl){## TODO sprawdzić poprawność dla k=0 !!!!\n  nrows <- length(H)*nrow(pCl)\n  rnames <- paste0(\"PC1.\",1:nrows)\n  p <- length(H)\n  \n  row <- 0\n  for(row in nrow(pCl)){\n    pc <- pCl[row,]\n    for(h in 1:(p-pc[3])){\n      row <- row + 1\n      lhs <- matrix(0, nrow=1, ncol=ncol(etrib$constr$lhs), dimnames=list(paste0(\"PU1.\", row), colnames(etrib$constr$lhs)))\n      dir <- matrix(\"<=\", nrow=1, ncol=1, dimnames=list(paste0(\"PU1.\", row)))\n      rhs <- matrix(-M, nrow=1, ncol=1, dimnames=list(paste0(\"PU1.\", row)))\n      \n      canames <- paste0(\"c\",J,\"(a\",pc[1],\",b\",(h+pc[3]),\")\")\n      lhs[,canames] <- 1\n      lhs[,\"L\"] <- -1\n      lhs[, paste0(\"v(a\",pc[1],\",b\",pc[2],\",<=\",pc[3],\",h\",h,\")\")] <- -M\n      \n      etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n      etrib$constr$dir <- rbind(etrib$constr$dir, dir)\n      etrib$constr$rhs <- rbind(etrib$constr$rhs, rhs)\n    }\n  }\n  return(etrib)\n}\n\ncreatePU2Constrints <- function(etrib,J, H, pCl){\n  nrows <- length(H)*nrow(pCl)\n  rnames <- paste0(\"PC1.\",1:nrows)\n  p <- length(H)\n  \n  row <- 0\n  for(row in nrow(pCl)){\n    pc <- pCl[row,]\n    for(h in 1:(p-pc[3])){\n      row <- row + 1\n      lhs <- matrix(0, nrow=1, ncol=ncol(etrib$constr$lhs),\n                    dimnames=list(paste0(\"PC2.\", row), colnames(etrib$constr$lhs)))\n      dir <- matrix(\"<=\", nrow=1, ncol=1, dimnames=list(paste0(\"PU2.\", row)))\n      rhs <- matrix(M, nrow=1, ncol=1, dimnames=list(paste0(\"PU2.\", row)))\n      \n      canames <- paste0(\"c\",J,\"(a\",pc[1],\",b\",h,\")\")\n      lhs[,canames] <- 1\n      lhs[,\"L\"] <- -1\n      lhs[,\"e\"] <- 1\n      lhs[, paste0(\"v(a\",pc[1],\",b\",pc[2],\",>=\",pc[3],\",h\",h,\")\")] <- M\n      \n      etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n      etrib$constr$dir <- rbind(etrib$constr$dir, dir)\n      etrib$constr$rhs <- rbind(etrib$constr$rhs, rhs)\n    }\n  }\n  return(etrib)\n}\n\ncreatePU3Constrints <- function(etrib, J, H, pCl){\n  p <- length(H)\n  lhs <- matrix(0, nrow=nrow(pCl), ncol=ncol(etrib$constr$lhs), \n                dimnames=list(paste0(\"PC2.\", 1:nrow(pCl)), colnames(etrib$constr$lhs)))\n  dir <- matrix(\">=\", nrow=nrow(pCl), ncol=1, \n            dimnames=list(paste0(\"PU2.\", 1:nrow(pCl))))\n  rhs <- matrix(1, nrow=nrow(pCl), ncol=1, \n            dimnames=list(paste0(\"PU2.\", 1:nrow(pCl))))\n  \n  for(row in nrow(pCl)){\n    pc <- pCl[row,]    \n    lhs[row, paste0(\"v(a\",pc[1],\",b\",pc[2],\",>=\",pc[3],\",h\",1:(p-pc[3]),\")\")] <- 1        \n  }\n  \n  etrib$constr$lhs <- rbind(etrib$constr$lhs, lhs)\n  etrib$constr$dir <- rbind(etrib$constr$dir, dir)\n  etrib$constr$rhs <- rbind(etrib$constr$rhs, rhs)\n  return(etrib)\n}",
    "created" : 1401217846846.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1385696473",
    "id" : "5B77C619",
    "lastKnownWriteTime" : 1401280415,
    "path" : "C:/Users/Patryk/Desktop/Praca Magisterska/ELECTRE TRI B/etrib/etribpairwisecomp.R",
    "project_path" : "etribpairwisecomp.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}